# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, WANG Hailin
# This file is distributed under the same license as the abqpy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abqpy \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-22 12:22+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:3
msgid "Computations with Abaqus results"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:5
msgid "This section discusses computations with Abaqus results in the Abaqus Scripting Interface."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:8
msgid "Rules for the mathematical operations"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:10
msgid "Mathematical operations are supported for FieldOutput, FieldValue, and HistoryOutput objects. These operators allow you to perform linear superposition of Abaqus results or to create more complex derived results from Abaqus results."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:12
msgid "The following rules apply:"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:14
msgid "The operations are performed on the components of a tensor or vector."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:15
msgid "The invariants are computed from the component values. For example, taking the absolute value of a tensor can result in negative values of the pressure invariant."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:16
msgid "Operations between FieldOutput, FieldValue, and HistoryOutput objects are not supported."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:17
msgid "Multiplication and division are not supported between two vector objects nor between two tensor objects."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:18
msgid "The types in an expression must be compatible. For example,"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:20
msgid "A vector cannot be added to a tensor."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:21
msgid "A three-dimensional surface tensor cannot be added to a three-dimensional planar tensor."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:22
msgid "INTEGRATION_POINT data cannot be added to ELEMENT_NODAL data."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:23
msgid "If the fields in the expression were obtained using the getSubset method, the same getSubset operations must have been applied in the same order to obtain each field."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:24
msgid "Arguments to the trigonometric functions must be in radians."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:25
msgid "Operations on tensors are performed in the local coordinate system, if it is available. Otherwise the global system is used. Abaqus assumes that the local coordinate systems are consistent for operations involving more than one tensor."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:26
msgid "Operations between FieldValue objects associated with different locations in the model are allowed only if the data types are the same. If the locations in the model differ, the FieldValue computed will not be associated with a location. If the local coordinate systems of the FieldValue objects are not the same, the local coordinate systems of both fieldValues will be disregarded and the fieldValue computed will have no local coordinate system."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:28
msgid "The FieldOutput operations are significantly more efficient than the FieldValue operators. You can save the computed FieldOutput objects with the following procedure (see the example, :doc:`user/output/python/examples:computations with FieldOutput objects`):"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:30
msgid "Create a new FieldOutput object in the output database."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:31
msgid "Use the `addData` method to add the new computed field objects to the new FieldOutput object."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:62
msgid "Valid mathematical operations"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:64
msgid "Table 1 describes the abbreviations that are used in mathematical operations."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:66
msgid "**Table 1. Abbreviations.**"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:69
msgid "Abbreviation"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:69
msgid "Allowable values"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:71
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:90
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:98
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:100
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:108
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:112
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:114
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:116
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:118
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:120
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:122
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:124
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:126
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:128
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:130
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:132
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:134
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:142
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:144
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:146
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:148
msgid "all"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:71
msgid "FieldOutput objects, FieldValue objects, HistoryVariable objects, or floating point numbers"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:74
msgid "float"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:74
msgid "floating point numbers"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:76
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:92
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:102
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:106
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:110
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:136
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:150
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:152
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:154
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:156
msgid "FO"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:76
msgid "FieldOutput objects"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:78
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:94
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:104
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:138
msgid "FV"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:78
msgid "FieldValue objects"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:80
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:96
#: ../../abqpy/docs/source/user/output/cpp/computations.rst:140
msgid "HO"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:80
msgid "HistoryOutput objects"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:83
msgid "Table 2 shows the valid operations on FieldOutput objects."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:85
msgid "**Table 2. Valid operations.**"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:88
msgid "Symbol"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:88
msgid "Operation"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:88
msgid "Return value"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:90
msgid "all + float"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:90
msgid "addition"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:92
msgid "FO + FO"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:94
msgid "FV + FV"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:96
msgid "HO + HO"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:98
msgid "-all"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:98
msgid "unary negation"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:100
msgid "all - float"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:100
msgid "subtraction"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:102
msgid "FO - FO"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:104
msgid "FV - FV"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:106
msgid "FO * FO (only if FO is a scalar)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:106
msgid "multiplication"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:108
msgid "all * float"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:110
msgid "FO / FO (only if FO is a scalar)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:110
msgid "division"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:112
msgid "all / float"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:114
msgid "abs(all)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:114
msgid "absolute value"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:116
msgid "acos(all)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:116
msgid "arccosine"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:118
msgid "asin(all)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:118
msgid "arcsine"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:120
msgid "atan(all)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:120
msgid "arctangent"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:122
msgid "cos(all)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:122
msgid "cosine"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:124
msgid "degreeToRadian (all)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:124
msgid "convert degrees to radians"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:126
msgid "exp(all)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:126
msgid "natural exponent"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:128
msgid "exp10(all)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:128
msgid "base 10 exponent"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:130
msgid "log(all)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:130
msgid "natural logarithm"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:132
msgid "log10(all)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:132
msgid "base 10 logarithm"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:134
msgid "float ** float"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:134
msgid "raise to a power"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:136
msgid "power(FO, float)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:138
msgid "power(FV, float)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:140
msgid "power(HO, float)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:142
msgid "radianToDegree (all)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:142
msgid "convert radian to degree"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:144
msgid "sin(all)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:144
msgid "sine"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:146
msgid "sqrt(all)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:146
msgid "square root"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:148
msgid "tan(all)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:148
msgid "tangent"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:150
msgid "complexMagnitude(FO)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:150
msgid "magnitude of the complex field output"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:152
msgid "complexPhase(FO)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:152
msgid "phase of the complex field output"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:154
msgid "complexReal(FO)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:154
msgid "real part of the complex field output"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:156
msgid "complexImag(FO)"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:156
msgid "imaginary part of the complex field output"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:160
msgid "Envelope calculations"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:162
msgid "You use envelope calculations to retrieve the extreme value for an output variable over a number of fields. Envelope calculations are especially useful for retrieving the extreme values over a number of load cases."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:164
msgid "The following operators consider a list of fields and perform the envelope calculation:"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:187
msgid "The envelope commands return two FieldOutput objects."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:189
msgid "The first object contains the requested extreme values."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:190
msgid "The second object contains the indices of the fields for which the extreme values were found. The indices derive from the order in which you supplied the fields to the command."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:192
msgid "The optional **invariant** argument is a Symbolic Constant specifying the invariant to be used when comparing vectors or tensors. The optional **componentLabel** argument is a odb_String specifying the component of the vector or tensor to be used for selecting the extreme value."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:194
msgid "The following rules apply to envelope calculations:"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:196
msgid "Abaqus compares the values using scalar data. If you are looking for the extreme value of a vector or a tensor, you must supply an invariant or a component label for the selection of the extreme value. For example, for vectors you can supply the MAGNITUDE invariant and for tensors you can supply the MISES invariant."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:197
msgid "The fields being compared must be similar. For example,"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:199
msgid "VECTOR and TENSOR_3D_FULL fields cannot appear in the same list."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:200
msgid "The output region of all the fields must be the same. All the fields must apply to the whole model, or all the fields must apply to the same set."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:203
msgid "Transformation of results"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:205
msgid "Transformations of vector and tensor fields are supported for rectangular, cylindrical, and spherical coordinate systems. The coordinate systems can be fixed or model based. Model-based coordinate systems refer to nodes for position and orientation. Abaqus uses the coordinates of the deformed state to determine a systems origin and orientation for model-based coordinate systems. Transformations that use a model-based coordinate system can account for large displacements of both the coordinate system and the structure."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:207
msgid "The steps required to transform results are (see also the example :doc:`user/output/python/examples:transformation of field results`):"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:209
msgid "Create the coordinate system."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:210
msgid "Retrieve the field from the database."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:211
msgid "Use the `fieldOutput.getTransformedField` method to obtain a new field with the results in the specified coordinate system."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:212
msgid "For large displacement of the structure and coordinate system, you must also retrieve the displacement field at the frame. You must compute this displacement field for the whole model to ensure that the required displacement information is available."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:214
msgid "The following rules apply to the transformation of results:"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:216
msgid "Beams, truss, and axisymmetric shell element results will not be transformed."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:218
msgid "The component directions 1, 2, and 3 of the transformed results will correspond to the system directions **X**, **Y**, and **Z** for rectangular coordinate systems; :math:`R`, :math:`\\theta`, and **Z** for cylindrical coordinate systems; and :math:`R`, :math:`\\theta`, and :math:`\\phi` for spherical coordinate systems."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:221
msgid "Stress results for three-dimensional continuum elements transformed into a cylindrical system would have the hoop stress in S22, which is consistent with the coordinate system axis but inconsistent with the stress state for a three-dimensional axisymmetric elements having hoop stress in S33."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:223
msgid "When you are transforming a tensor, the location or integration point always takes into account the deformation. The location of the coordinate system depends on the model, as follows:"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:225
msgid "If the system is fixed, the coordinate system is fixed."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:226
msgid "If the system is model based, you must supply a displacement field that determines the instantaneous location and orientation of the coordinate system."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:228
msgid "Abaqus will perform transformations of tensor results for shells, membranes, and planar elements as rotations of results about the element normal at the element result location. The element normal is the normal computed for the frame associated with the field by Abaqus, and you cannot redefine the normal. Abaqus defines the location of the results location from the nodal locations. You specify optional arguments if you want to use the deformed nodal locations to transform results. For rectangular, cylindrical, and spherical coordinate systems the second component direction for the transformed results will be determined by one of the following:"
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:230
msgid "The **Y** - axis in a rectangular coordinate system."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:231
msgid "The :math:`\\theta`-axis in a cylindrical coordinate system."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:232
msgid "The :math:`\\theta`-axis in a spherical coordinate system."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:233
msgid "A user-specified datum axis projected onto the element plane."
msgstr ""

#: ../../abqpy/docs/source/user/output/cpp/computations.rst:235
msgid "If the coordinate system used for projection and the element normal have an angle less than the specified tolerance (the default is 30°), Abaqus will use the next axis and generate a warning."
msgstr ""
